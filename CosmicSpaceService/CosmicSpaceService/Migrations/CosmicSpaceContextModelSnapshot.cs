// <auto-generated />
using System;
using CosmicSpaceService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CosmicSpaceService.Migrations
{
    [DbContext(typeof(CosmicSpaceContext))]
    partial class CosmicSpaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CosmicSpaceService.Models.Ammunition", b =>
                {
                    b.Property<int>("AmmunitionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MetalPrice");

                    b.Property<double>("MultiplierEnemy")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("MultiplierPilot")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<double>("ScrapPrice");

                    b.HasKey("AmmunitionId");

                    b.HasIndex("AmmunitionId", "Name")
                        .IsUnique()
                        .HasName("UC_Ammunition");

                    b.ToTable("Ammunitions");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.AmmunitionPilot", b =>
                {
                    b.Property<int>("AmmunitionId");

                    b.Property<long>("PilotId");

                    b.Property<long>("Count");

                    b.HasKey("AmmunitionId", "PilotId");

                    b.HasIndex("AmmunitionId")
                        .IsUnique();

                    b.HasIndex("PilotId");

                    b.ToTable("AmmunitionsPilots");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Enemy", b =>
                {
                    b.Property<int>("EnemyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BasicDamage");

                    b.Property<long>("BasicHitpoints");

                    b.Property<long>("BasicShields");

                    b.Property<int>("BasicShotDistance");

                    b.Property<int>("BasicSpeed");

                    b.Property<bool>("IsAggressive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("RewardId");

                    b.HasKey("EnemyId");

                    b.HasIndex("RewardId");

                    b.ToTable("Enemies");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.EnemyMap", b =>
                {
                    b.Property<int>("MapId");

                    b.Property<int>("EnemyId");

                    b.Property<int>("Count");

                    b.HasKey("MapId", "EnemyId");

                    b.HasIndex("EnemyId");

                    b.ToTable("EnemiesMaps");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Map", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPvp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("RequiredLevel")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MapId");

                    b.HasIndex("MapId", "Name")
                        .IsUnique()
                        .HasName("UC_Map");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Pilot", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("Experience")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1000))");

                    b.Property<long>("Hitpoints")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1000))");

                    b.Property<bool>("IsDead")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("KillBy")
                        .HasMaxLength(30);

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Metal")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<float>("PositionX")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((100))");

                    b.Property<float>("PositionY")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((-100))");

                    b.Property<double>("Scrap")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("Shields")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("UserId");

                    b.HasIndex("MapId")
                        .IsUnique();

                    b.HasIndex("Nickname")
                        .IsUnique()
                        .HasName("UC_Pilot");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Experience");

                    b.Property<double>("Metal");

                    b.Property<double>("Scrap");

                    b.HasKey("RewardId");

                    b.HasIndex("RewardId")
                        .IsUnique()
                        .HasName("UC_Reward");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BasicCargo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((100))");

                    b.Property<long>("BasicHitpoints")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1000))");

                    b.Property<int>("BasicSpeed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((50))");

                    b.Property<int>("Extras")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Generators")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Lasers")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("MetalPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("RequiredLevel")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("RewardId");

                    b.Property<double>("ScrapPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ShipId");

                    b.HasIndex("RewardId")
                        .IsUnique();

                    b.HasIndex("ShipId", "Name")
                        .IsUnique()
                        .HasName("UC_Ship");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptRules");

                    b.Property<bool>("Ban");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("EmailNewsletter");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UserId");

                    b.HasIndex("UserId", "Username", "Password", "Email")
                        .IsUnique()
                        .HasName("UC_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CosmicSpaceService.Models.AmmunitionPilot", b =>
                {
                    b.HasOne("CosmicSpaceService.Models.Ammunition", "Ammunition")
                        .WithOne("AmmunitionsPilots")
                        .HasForeignKey("CosmicSpaceService.Models.AmmunitionPilot", "AmmunitionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CosmicSpaceService.Models.Pilot", "Pilot")
                        .WithMany("Ammunitions")
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Enemy", b =>
                {
                    b.HasOne("CosmicSpaceService.Models.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CosmicSpaceService.Models.EnemyMap", b =>
                {
                    b.HasOne("CosmicSpaceService.Models.Enemy", "Enemy")
                        .WithMany("EnemiesMaps")
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CosmicSpaceService.Models.Map", "Map")
                        .WithMany("EnemiesMaps")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Pilot", b =>
                {
                    b.HasOne("CosmicSpaceService.Models.Map", "Map")
                        .WithOne()
                        .HasForeignKey("CosmicSpaceService.Models.Pilot", "MapId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CosmicSpaceService.Models.Ship", "Ship")
                        .WithOne()
                        .HasForeignKey("CosmicSpaceService.Models.Pilot", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CosmicSpaceService.Models.User", "User")
                        .WithOne("Pilot")
                        .HasForeignKey("CosmicSpaceService.Models.Pilot", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CosmicSpaceService.Models.Ship", b =>
                {
                    b.HasOne("CosmicSpaceService.Models.Reward", "Reward")
                        .WithOne()
                        .HasForeignKey("CosmicSpaceService.Models.Ship", "RewardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
